org 0000h
	MOV R0,#00H
	MOV R1,#00H
	MOV R2,#00H
	MOV R3,#00H
	MOV R4,#00H
	mov P3,#00000011b
	
	mov tmod,#20h      ;timer 1 configured in mode 2
	mov th1,#0fdh      ;set 9600 bps baud rate
    mov scon,#50h      ;8 bit data,1 stop bit,REN enabled	
	setb tr1           ; start timer1
	repeat1: jnb RI,repeat1      ;wait until character byte is received 
	mov a, sbuf                ;read and save the rec data
	clr RI
	
	// for AND GATE
CJNE A,#01H,Y1	  
 AND1:LCALL A00
	  ACALL AND2
	  LCALL A01
	  ACALL AND2
	  LCALL A10
	  ACALL AND2
	  LCALL A11
	  ACALL AND6
 AND2:JB P1.2,AND3
	  INC R0
 AND3:JB P1.5,AND4
	  INC R1
 AND4:JB P2.3,AND5
	  INC R2
 AND5:JB P2.6,REP
	  INC R3  
 REP: RET
 AND6:JNB P1.2,AND7
	  INC R0
 AND7:JNB P1.5,AND8
	  INC R1
 AND8:JNB P2.3,AND9
	  INC R2
 AND9:JNB P2.6,REP12
	  INC R3  
 REP12: LJMP W

A00:MOV P1,#01000000B
	MOV P2,#10000001B
	RET
A01:MOV P1,#01001001B
	MOV P2,#10010011B
	RET
A10:MOV P1,#01010010B
	MOV P2,#10101101B
	RET
A11:MOV P1,#01111111B
	MOV P2,#11111111B
	RET
	
	// FOR NAND GATE
Y1:CJNE A,#02H,Y2
NAND1:LCALL N00
	  ACALL NAND2
	  LCALL N01
	  ACALL NAND2
	  LCALL N10
	  ACALL NAND2
	  LCALL N11
	  ACALL NAND6
NAND2:JNB P1.2,NAND3
	  INC R0
NAND3:JNB P1.5,NAND4
	  INC R1
NAND4:JNB P2.3,NAND5
	  INC R2
NAND5:JNB P2.6,REP1
	  INC R3  
 REP1: RET
NAND6:JB P1.2,NAND7
	  INC R0
NAND7:JB P1.5,NAND8
	  INC R1
NAND8:JB P2.3,NAND9
	  INC R2
NAND9:JB P2.6,REP13
	  INC R3  
REP13: LJMP W

N00:MOV P1,#01100100B
	MOV P2,#11001001B
	RET
N01:MOV P1,#01101101B
	MOV P2,#11011011B
	RET
N10:MOV P1,#01110110B
	MOV P2,#11101101B
	RET
N11:MOV P1,#01111111B
	MOV P2,#11111111B
	RET

	//FOR OR GATE
Y2:CJNE A,#03H,Y3	
OR1:LCALL O01
	  ACALL OR2
	  LCALL O10
	  ACALL OR2
	  LCALL O11
	  ACALL OR2
	  LCALL O00
	  ACALL OR6
	  
OR2:JNB P1.2,OR3
	  INC R0
OR3:JNB P1.5,OR4
	  INC R1
OR4:JNB P2.3,OR5
	  INC R2
OR5:JNB P2.6,REP14
	  INC R3  
 REP14: RET
OR6:JB P1.2,OR7
	  INC R0
OR7:JB P1.5,OR8
	  INC R1
OR8:JB P2.3,OR9
	  INC R2
OR9:JB P2.6,REP24
	  INC R3  
REP24: LJMP W

O00:MOV P1,#01000000B
	MOV P2,#10000001B
	RET
O01:MOV P1,#01101101B
	MOV P2,#11011011B
	RET
O10:MOV P1,#01110110B
	MOV P2,#11101101B
	RET
O11:MOV P1,#01111111B
	MOV P2,#11111111B
	RET
	
	//FOR NOR GATE
Y3:CJNE A,#04H,Y4
NOR1: LCALL NR01
	  ACALL NOR2
	  LCALL NR10
	  ACALL NOR2
	  LCALL NR11
	  ACALL NOR2
	  LCALL NR00
	  ACALL NOR6
	  
NOR2:JB P1.0,NOR3
	  INC R0
NOR3:JB P1.3,NOR4
	  INC R1
NOR4:JB P2.1,NOR5
	  INC R2
NOR5:JB P2.4,REP15
	  INC R3  
 REP15: RET
NOR6:JNB P1.0,NOR7
	  INC R0
NOR7:JNB P1.3,NOR8
	  INC R1
NOR8:JNB P2.1,NOR9
	  INC R2
NOR9:JNB P2.4,REP25
	  INC R3  
REP25: LJMP W

NR00:MOV P1,#01001001B
	 MOV P2,#10010011B
	 RET
NR01:MOV P1,#01010010B
	 MOV P2,#10100101B
	 RET
NR10:MOV P1,#01100100B
	 MOV P2,#11001001B
	 RET
NR11:MOV P1,#01110110B
	 MOV P2,#11101101B
	 RET
	
	 
// FOR XOR GATE	 
Y4:CJNE A,#05H,Y5
XOR1:LCALL X01
	  ACALL XOR2
	  LCALL X10
	  ACALL XOR2
	  LCALL X00
	  ACALL XOR6
	  K:LCALL X11
	  ACALL XOR6
XOR2:JNB P1.2,XOR3
	  INC R0
XOR3:JNB P1.5,XOR4
	  INC R1
XOR4:JNB P2.3,XOR5
	  INC R2
XOR5:JNB P2.6,REP16
	  INC R3  
 REP16: RET
 XOR6:JB P1.2,XOR7
	  INC R0
XOR7:JB P1.5,XOR8
	  INC R1
XOR8:JB P2.3,XOR9
	  INC R2
XOR9:JB P2.6,REP26
	  INC R3
CJNE R3,#04H,K

REP26:LJMP W

X00:MOV P1,#01000000B
	MOV P2,#10000001B
	RET
X01:MOV P1,#01101101B
	MOV P2,#11011011B
	RET
X10:MOV P1,#01110110B
	MOV P2,#11101101B
	RET
X11:MOV P1,#01011011B
	MOV P2,#10110111B
	RET
	
	// FOR XNOR GATE
Y5:CJNE A,#06H,Q1
XNOR1:LCALL XN00
	  ACALL XNOR2
	  LCALL XN11
	  ACALL XNOR2
	  LCALL XN01
	  ACALL XNOR6 
	K1:LCALL XN10
	  ACALL XNOR6  
XNOR2:JNB P1.2,XNOR3
	  INC R0
XNOR3:JNB P1.5,XNOR4
	  INC R1
XNOR4:JNB P2.3,XNOR5
	  INC R2
XNOR5:JNB P2.6,REP17
	  INC R3  
 REP17: RET
XNOR6:JB P1.2,XNOR7
	  INC R0
XNOR7:JB P1.5,XNOR8
	  INC R1
XNOR8:JB P2.3,XNOR9
	  INC R2
XNOR9:JB P2.6,REP27
	  INC R3
CJNE R3,#04H,K1
REP27:LJMP W

XN00:MOV P1,#01100100B
	 MOV P2,#11001001B
	 RET
XN01:MOV P1,#01001001B
	 MOV P2,#10010011B
	 RET
XN10:MOV P1,#01010010B
	 MOV P2,#10100101B
	 RET
XN11:MOV P1,#01111111B
	 MOV P2,#11111111B
	 RET
	 
	 	Q1:NOP
	
/*NOT1: LCALL NT0
	  ACALL NOT2
	  LCALL NT1
	  ACALL NOT8
	  
	  
NOT2: JB P1.1,NOT3
	  INC R0
NOT3: JB P1.3,NOT4
	  INC R1
NOT4: JB P1.5,NOT5
	  INC R2
NOT5: JB P2.2,NOT6
	  INC R3
NOT6: JB P2.4,NOT7
	  INC R4
NOT7: JB P2.6,REP
	  INC R5  
 REP: RET
NOT8: JNB P1.1,NOT9
	  INC R0
NOT9: JNB P1.3,NOTX
	  INC R1
NOTX: JNB P1.5,NOTX1
	  INC R2
NOTX1:JNB P2.2,NOTX2
	  INC R3
NOTX2:JNB P2.4,NOTX3
	  INC R4	
NOTX3:JNB P2.6,REP2
	  INC R5
CJNE R5,#06H,NOT1	  
REP2: LJMP W

NT0: MOV P1,#01010101B
	 MOV P2,#00101011B
	 RET
NT1: MOV P1,#01101010B
	 MOV P2,#01010101B
	 RET
  


	  
	  

//MOV SBUF,A
/*W:CJNE R0,#06H,X
  SETB P0.1
  INC R6
X:CJNE R1,#06H,a1
 SETB P3.2
 INC R6
a1:CJNE R2,#06H,a2
 SETB P3.3
 INC R6
a2:CJNE R3,#06H,a3
 SETB P3.4
 INC R6
a3:CJNE R4,#06H,Z
 SETB P3.5
 INC R6
Z:CJNE R5,#06H,FINAL
 SETB P3.6
 INC R6
FINAL:CJNE R6,#06H,Q
	SETB P3.7*/
	
	
// LEDS AS AN INDICATORS
W:CJNE R0,#04H,X
  SETB P3.3
  Acall delay
    Acall delay
	  Acall delay
	    Acall delay
  INC R4
X:CJNE R1,#04H,Y
 SETB P3.4
 acall delay
  Acall delay
    Acall delay
	  Acall delay
INC R4
Y:CJNE R2,#04H,Z
 SETB P3.5
 acall delay
   Acall delay
     Acall delay
	   Acall delay
 INC R4
Z:CJNE R3,#04H,FINAL
 SETB P3.6
 acall delay
   Acall delay
     Acall delay
	   Acall delay
 INC R4
FINAL:CJNE R4,#04H,e
	SETB P3.7
	acall delay
	  Acall delay
	    Acall delay
		  Acall delay
	mov A,R4
	mov sbuf,a
e:mov a,r4
mov sbuf,a	
DELAY:mov r6,#200
thr2:mov r7,#250
thr1:nop
nop
djnz r7,thr1
djnz r6,thr2
ret

Q: NOP 
		
		//NW: INC A
		//MOV SBUF,A
		
		here:   jnb TI,here  ;wait until the last bit is sent
       clr TI       ;clear TI before sending the next byte
//	sjmp repeat              ;go to receive next character
		
	end